#! /bin/bash

# TODO: test for job name (handle 404 case?)
# TODO: add usage

job=${1}
jobDir=`echo ${job}|sed 's/\//_/g'`
curDir=`pwd`

hostname=`hostname -f`
export NOMAD_ADDR=${NOMAD_ADDR:-"http://127.0.0.1:4646"}
# echo "📂 Making temp directory"
tmpDir=`mktemp -d 2>/dev/null || mktemp -d -t 'mytmpdir'`
outDir=${tmpDir}/${jobDir}
mkdir ${outDir}
cd ${outDir}

echo "🤖 Collecting general information (hostname = ${hostname})"
echo "    📝 all nodes"
curl -s ${NOMAD_ADDR}/v1/nodes > nodes.json
echo "    📝 all evaluations"
curl -s ${NOMAD_ADDR}/v1/evaluations > evaluations.json
echo "    📝 all deployments"
curl -s ${NOMAD_ADDR}/v1/deployments > deployments.json


echo "🤖 Collecting server agent information"
for server in `curl -s ${NOMAD_ADDR}/v1/agent/members | jq -r --sort-keys .Members[].Addr`
do
    echo "    📝 Server = ${server}"
    serverFileName=`echo ${server}|sed 's/\./-/g'`
    curl -s http://${server}:4646/v1/agent/self | jq --sort-keys . > agent-self-server-${serverFileName}.json
done

echo "🤖 Collecting client agent information"
for client in `curl -s ${NOMAD_ADDR}/v1/nodes | jq -r --sort-keys .[].Address`
do
    echo "    📝 Client = ${client}"
    clientFileName=`echo ${client}|sed 's/\./-/g'`
    curl -s http://${client}:4646/v1/agent/self | jq --sort-keys . > agent-self-client-${clientFileName}.json
done


if [ -n "${job}" ]; then
    echo "🤖 Collecting information about job ${job}"
    echo "    📝 job by name"
    curl -s ${NOMAD_ADDR}/v1/job/${job} > job.${job}.json
    echo "    📝 allocations"
    curl -s ${NOMAD_ADDR}/v1/job/${job}/allocations > job.${job}.allocations.json
    echo "    📝 versions"
    curl -s ${NOMAD_ADDR}/v1/job/${job}/versions > job.${job}.versions.json
    echo "    📝 summary"
    curl -s ${NOMAD_ADDR}/v1/job/${job}/summary > job.${job}.summary.json

    echo "🤖 Collecting job allocation details for ${job}"
    for alloc in `curl -s ${NOMAD_ADDR}/v1/job/${job}/allocations | jq -r '.[].ID'`
    do
        echo "    📝 allocation ${alloc}"
        curl -s ${NOMAD_ADDR}/v1/allocation/${alloc} > job.${job}.allocation.${alloc}.json

        for task in $(nomad alloc status -json ${alloc} | jq -r ' .TaskStates|keys[]');
        do
            echo -e "        📝 Gathering logs for allocation ${alloc}"
            for log in stdout stderr;
            do
                echo "            📝 Task = ${task} - ${log}"
                nomad alloc logs "--${log}" ${alloc} ${task} > "job.${job}.allocation.${alloc}.${task}.${log}.log";
            done;
        done
    done
fi

cd ${tmpDir}

tarballFileName=${curDir}/job-bundle-${jobDir}-`date +%F-%H%M%S`.tgz
echo "    📦 Creating archive ${tarballFileName}"

tar -zcvf --preserve-order --sort=name ${tarballFileName} ${jobDir} 2>/dev/null

echo "    🧼 Cleaning up temp directory"
cd ${curDir}
rm -rf $tmpDir
echo "🤖 Done."
